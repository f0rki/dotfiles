[color]
    ui = true

[merge]
    tool = meld

[pull]
    # we default to fast forward merges only on "git pull"
	ff = only

# always fsck everything, otherwise we might get corrupted shit
[transfer]
    fsckobjects = true
[fetch]
    fsckobjects = true
[receive]
    fsckObjects = true

# allows to clone some broken repos like the python-requests git repo
# https://github.com/psf/requests/issues/2690
# timezone doesn't sound critical to me... so just warn?
[receive "fsck"]
	badTimezone = warn
[fetch "fsck"]
	badTimezone = warn
[transfer "fsck"]
    badTimezone = warn


[pretty]
    pretty1     = %C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)
    prettyshort = %C(bold blue)%h  %C(bold green)%d%Creset %s%C(dim white) [%cn]
    prettylong  = %n=========================================================%n%C(bold blue)%h  %C(bold green)%d%Creset %s%C(dim white) [%cn]
    prettybody = %n=========================================================%n%C(bold blue)%h  %C(bold green)%d%Creset %s%C(dim white) [%cn] %n %b

[alias]
    flame = blame
    hist = log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short

    # Abbreviations for common commands

    pr = pull --rebase
    pm = pull --no-rebase
    fo = fetch origin
    st = status -sb
    c = commit
    ca = commit --amend
    # BRanch
    br = branch
    # CheckOut
    co = checkout
    # DiFf
    df = diff
    # Diff Cached
    dc = diff --cached
    # Log P
    lg = log -p
    # Make Branch
    mb = switch -c
    # ReBase Interactive
    rbi = rebase --interactive
    # ReBase Continue
    rbc = rebase --continue
    # Branch Verbose ; Show all branches
    bv  = branch -v
    # Branch Verbose Merged; Show all merged branches
    bvm = branch -v --merged
    # DailyReView -- what happened before? (commit title, message + affected files)
    drv = log --since='1 day ago' --pretty=prettybody --numstat -n 15
    # WeeklyReView -- what happened before? (commit title, message + affected files)
    wrv = log --since='1 week ago' --pretty=prettybody --numstat -n 15
    # ReView in tree form (last 25)
    rv  = log --graph --abbrev-commit --decorate --pretty=pretty1 --all -n 25
    # ReView Long; in tree from (all)
    rvl = log --graph --abbrev-commit --decorate --pretty=pretty1 --all
    # Review Merges (tree form)
    rvm = log --graph --abbrev-commit --decorate --pretty=pretty1 --all --merges -n 25
    # LiSt ; Short commit listing (last 25)
    ls  = log --pretty=prettyshort -n 25
    # List All; Commit listing (all)
    la  = log --pretty=prettyshort --all
    # List Long; Long commit listing -- with stats of changed files
    ll  = log --pretty=prettylong --decorate --numstat
    # List Commits; Last commit info
    lc  = log --numstat -1
    # Diff Last Commit
    dlc = diff --cached HEAD^
    # Diff Commit Short; 'commit~1' with 'commit' (short info)
    dcs = "!f() { git diff --numstat "$1"^.."$1"; }; f"
    # ShortLog; number of commits per author
    sl  = shortlog -sn
    # Commit Search; search commit messages
    cs  = log --grep
    # Commit Search Short; search commit messages short
    css = log --abbrev-commit --pretty=pretty1 --grep
    # File LOG
    flog = log --

    # Extra alias for more complex tasks
    permission-reset = !git diff -p -R --no-color | grep -E \"^(diff|(old|new) mode)\" --color=never | git apply

	svn-pull = !git svn fetch && git svn rebase
    svn-commit = !git svn-pull && git svn dcommit && git push
    
    gen-ignore = "!gi() { curl -sL https://www.toptal.com/developers/gitignore/api/$@ ;}; gi >> .gitignore"


[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
    clean = git-lfs clean -- %f

[credential]
    helper = /usr/libexec/git-core/git-credential-libsecret


# configure delta as a diff viewer
# https://github.com/dandavison/delta
# Install with dnf install git-delta
[core]
    pager = delta
[interactive]
    diffFilter = delta --color-only

[delta]
    features = line-numbers decorations
    whitespace-error-style = 22 reverse

[delta "decorations"]
    commit-decoration-style = bold yellow box ul
    file-style = bold yellow ul
    file-decoration-style = none

[include]
    path = ~/.gitconfig.local
